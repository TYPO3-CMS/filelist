/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
import RegularEvent from"@typo3/core/event/regular-event.js";export var FileListActionEvent;!function(t){t.primary="typo3:filelist:resource:action:primary",t.primaryContextmenu="typo3:filelist:resource:action:primaryContextmenu",t.show="typo3:filelist:resource:action:show",t.rename="typo3:filelist:resource:action:rename",t.select="typo3:filelist:resource:action:select",t.download="typo3:filelist:resource:action:download"}(FileListActionEvent||(FileListActionEvent={}));export var FileListActionSelector;!function(t){t.elementSelector="[data-filelist-element]",t.actionSelector="[data-filelist-action]"}(FileListActionSelector||(FileListActionSelector={}));export class FileListActionUtility{static createResourceFromContextDataset(t){return{type:t.filecontextType,identifier:t.filecontextIdentifier,stateIdentifier:t.filecontextIdentifier,name:t.filecontextName,thumbnail:null,uid:t.filecontextUid?parseInt(t.filecontextUid,10):null,metaUid:t.filecontextMetaUid?parseInt(t.filecontextMetaUid,10):null}}static getResourceForElement(t){return{type:t.dataset.filelistType,identifier:t.dataset.filelistIdentifier,stateIdentifier:t.dataset.filelistStateIdentifier,name:t.dataset.filelistName,thumbnail:"filelistThumbnail"in t.dataset&&""!==t.dataset.filelistThumbnail.trim()?t.dataset.filelistThumbnail:null,uid:t.dataset.filelistUid?parseInt(t.dataset.filelistUid,10):null,metaUid:t.dataset.filelistMetaUid?parseInt(t.dataset.filelistMetaUid,10):null}}}class FileListActions{constructor(){new RegularEvent("contextmenu",((t,e)=>{t.preventDefault(),t.stopImmediatePropagation();const i=this.getActionDetail(t,e);if("primary"===i.action)document.dispatchEvent(new CustomEvent(FileListActionEvent.primaryContextmenu,{detail:i}))})).delegateTo(document,FileListActionSelector.actionSelector),new RegularEvent("click",((t,e)=>{t.preventDefault();const i=this.getActionDetail(t,e);switch(i.action){case"primary":document.dispatchEvent(new CustomEvent(FileListActionEvent.primary,{detail:i}));break;case"show":document.dispatchEvent(new CustomEvent(FileListActionEvent.show,{detail:i}));break;case"select":document.dispatchEvent(new CustomEvent(FileListActionEvent.select,{detail:i}));break;case"rename":document.dispatchEvent(new CustomEvent(FileListActionEvent.rename,{detail:i}));break;case"download":document.dispatchEvent(new CustomEvent(FileListActionEvent.download,{detail:i}))}})).delegateTo(document,FileListActionSelector.actionSelector)}getActionDetail(t,e){const i=e.dataset.filelistAction,n=e.closest(FileListActionSelector.elementSelector);return{event:t,trigger:e,action:i,resources:[FileListActionUtility.getResourceForElement(n)],url:e.dataset.filelistActionUrl??null,originalAction:null}}}export default new FileListActions;